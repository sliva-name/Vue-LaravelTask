version: "3.8"

services:
  app:
    image: ${BACKEND_IMAGE:-tekstura-backend:latest}
    container_name: laravel_app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "9000:9000"
    environment:
      DB_CONNECTION: pgsql
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_DATABASE: articles_db
      DB_USERNAME: laravel
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: "true"
    volumes:
      - app_storage:/var/www/html/storage
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h postgres_db -p 5432 -U laravel"]
      interval: 5s
      timeout: 3s
      retries: 10

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: articles_db
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10

  frontend:
    image: ${FRONTEND_IMAGE:-tekstura-frontend:latest}
    container_name: nuxt_frontend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      NUXT_HOST: 0.0.0.0
      NUXT_PORT: 3000
      API_BASE_URL: http://laravel_app:9000/api
    depends_on:
      - app
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: reverse_proxy
    ports:
      - "5173:80"   # внешний порт, как у тебя был
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - app
    networks:
      - app-network

volumes:
  db_data:
  app_storage:

networks:
  app-network:
    driver: bridge
