#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ Tekstura –∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy-from-repos.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${GREEN}üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ Tekstura –∏–∑ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Git –∏ Docker
if ! command -v git &> /dev/null; then
    echo -e "${RED}‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.${NC}"
    exit 1
fi

if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.${NC}"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.${NC}"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
clone_repo() {
    local repo_name=$1
    local repo_url=$2
    local target_dir=$3
    
    echo -e "${YELLOW}üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ${repo_name}...${NC}"
    
    if [ -d "$target_dir" ]; then
        echo -e "  üìÇ –ü–∞–ø–∫–∞ ${target_dir} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        echo -e "  üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
        cd "$target_dir"
        git pull origin main
        cd - > /dev/null
    else
        echo -e "  üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ ${repo_url}"
        git clone "$repo_url" "$target_dir"
    fi
    
    echo -e "  ‚úÖ ${repo_name} –≥–æ—Ç–æ–≤"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
get_repo_url() {
    local repo_name=$1
    echo -n "–í–≤–µ–¥–∏—Ç–µ URL –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è ${repo_name}: "
    read url
    echo "$url"
}

echo -e "${YELLOW}üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:${NC}"
echo "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤"
echo "2. –í–≤–µ–¥–∏—Ç–µ URL –∫–∞–∂–¥–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
echo "3. –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–ª–æ–Ω–∏—Ä—É–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç –ø—Ä–æ–µ–∫—Ç"
echo ""

# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
echo -e "${YELLOW}üîó –í–≤–µ–¥–∏—Ç–µ URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤:${NC}"
INFRASTRUCTURE_URL=$(get_repo_url "infrastructure")
BACKEND_URL=$(get_repo_url "backend")
FRONTEND_URL=$(get_repo_url "frontend")

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DIR="tekstura-deployed"
echo -e "${BLUE}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞: ${PROJECT_DIR}${NC}"
mkdir -p "$PROJECT_DIR"
cd "$PROJECT_DIR"

echo ""
echo -e "${GREEN}üîß –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤...${NC}"

# –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
clone_repo "Infrastructure" "$INFRASTRUCTURE_URL" "infrastructure"
clone_repo "Backend" "$BACKEND_URL" "backend"
clone_repo "Frontend" "$FRONTEND_URL" "frontend"

echo -e "${GREEN}‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω—ã!${NC}"
echo ""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "${YELLOW}‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

if [ -f "infrastructure/env.example" ]; then
    if [ ! -f "infrastructure/.env" ]; then
        echo -e "  üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"
        cp infrastructure/env.example infrastructure/.env
        echo -e "  ‚ö†Ô∏è  –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ infrastructure/.env —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º"
    else
        echo -e "  ‚úÖ .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
else
    echo -e "  ‚ö†Ô∏è  –§–∞–π–ª env.example –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ infrastructure"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo -e "${YELLOW}üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker...${NC}"
if docker ps > /dev/null 2>&1; then
    echo -e "  ‚úÖ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo -e "  ‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi

echo ""

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo -e "${GREEN}üéâ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!${NC}"
echo ""
echo -e "${YELLOW}üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:${NC}"
echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ infrastructure/.env —Ñ–∞–π–ª (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç:"
echo "   cd infrastructure"
echo "   make start-full"
echo ""
echo -e "${BLUE}üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ:${NC}"
echo "   - Frontend: http://localhost:5173"
echo "   - API: http://localhost:5173/api"
echo "   - Direct Nuxt: http://localhost:3000"
echo ""

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
echo -n "–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç —Å–µ–π—á–∞—Å? (y/N): "
read -r response
if [[ "$response" =~ ^[Yy]$ ]]; then
    echo ""
    echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
    cd infrastructure
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Make
    if command -v make &> /dev/null; then
        make start-full
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Make –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º docker-compose –Ω–∞–ø—Ä—è–º—É—é${NC}"
        docker-compose up -d
        echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
        sleep 10
        docker-compose exec app php artisan migrate --force
        docker-compose exec app php artisan db:seed --force
    fi
    
    echo ""
    echo -e "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo -e "${BLUE}üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å–∞–º:${NC}"
    echo "   - Frontend: http://localhost:5173"
    echo "   - API: http://localhost:5173/api"
    echo "   - Direct Nuxt: http://localhost:3000"
fi

echo ""
echo -e "${GREEN}üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
