name: Deploy Backend

on:
  push:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: tekstura_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo, pdo_pgsql, mbstring, exif, pcntl, bcmath, gd
        coverage: xdebug
        
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
    - name: Generate key
      run: php artisan key:generate
      
    - name: Run migrations
      run: php artisan migrate --force
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: tekstura_test
        DB_USERNAME: postgres
        DB_PASSWORD: secret
        
    - name: Run tests
      run: php artisan test
      env:
        DB_CONNECTION: pgsql
        DB_HOST: localhost
        DB_PORT: 5432
        DB_DATABASE: tekstura_test
        DB_USERNAME: postgres
        DB_PASSWORD: secret

  deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: |
        docker build -t tekstura-backend:${{ github.sha }} .
        docker tag tekstura-backend:${{ github.sha }} tekstura-backend:latest
        
    - name: Deploy to staging
      if: github.ref == 'refs/heads/main'
      run: |
        # Здесь логика деплоя на staging
        echo "Deploying to staging..."
        # docker push registry.example.com/tekstura-backend:staging
        
    - name: Deploy to production
      if: github.event_name == 'release'
      run: |
        # Здесь логика деплоя на production
        echo "Deploying to production..."
        # docker push registry.example.com/tekstura-backend:latest
